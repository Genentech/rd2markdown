% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rd2markdown.R
\name{rd2markdown}
\alias{rd2markdown}
\alias{rd2markdown.Rd}
\alias{rd2markdown.list}
\alias{rd2markdown.NULL}
\alias{rd2markdown.name}
\alias{rd2markdown.alias}
\alias{rd2markdown.keyword}
\alias{rd2markdown.USERMACRO}
\alias{rd2markdown.code}
\alias{rd2markdown.RCODE}
\alias{rd2markdown.verb}
\alias{rd2markdown.pkg}
\alias{rd2markdown.env}
\alias{rd2markdown.default}
\alias{rd2markdown.title}
\alias{rd2markdown.description}
\alias{rd2markdown.author}
\alias{rd2markdown.format}
\alias{rd2markdown.describe}
\alias{rd2markdown.details}
\alias{rd2markdown.note}
\alias{rd2markdown.source}
\alias{rd2markdown.value}
\alias{rd2markdown.section}
\alias{rd2markdown.examples}
\alias{rd2markdown.usage}
\alias{rd2markdown.preformatted}
\alias{rd2markdown.references}
\alias{rd2markdown.seealso}
\alias{rd2markdown.arguments}
\alias{rd2markdown.dots}
\alias{rd2markdown.TEXT}
\alias{rd2markdown.COMMENT}
\alias{rd2markdown.character}
\alias{rd2markdown.emph}
\alias{rd2markdown.item}
\alias{rd2markdown.enumerate}
\alias{rd2markdown.itemize}
\alias{rd2markdown.LIST}
\alias{rd2markdown.tabular}
\alias{rd2markdown.tab}
\alias{rd2markdown.cr}
\alias{rd2markdown.href}
\alias{rd2markdown.url}
\alias{rd2markdown.eqn}
\alias{rd2markdown.deqn}
\title{Render a Rd object out to a markdown file}
\usage{
rd2markdown(x, fragments = c(), ...)

\method{rd2markdown}{Rd}(x, fragments = c(), ...)

\method{rd2markdown}{list}(x, fragments = c(), ...)

\method{rd2markdown}{`NULL`}(x, fragments = c(), ...)

\method{rd2markdown}{name}(x, fragments = c(), ...)

\method{rd2markdown}{alias}(x, fragments = c(), ...)

\method{rd2markdown}{keyword}(x, fragments = c(), ...)

\method{rd2markdown}{USERMACRO}(x, fragments = c(), ...)

\method{rd2markdown}{code}(x, fragments = c(), ...)

\method{rd2markdown}{RCODE}(x, fragments = c(), ...)

\method{rd2markdown}{verb}(x, fragments = c(), ...)

\method{rd2markdown}{pkg}(x, fragments = c(), ...)

\method{rd2markdown}{env}(x, fragments = c(), ...)

\method{rd2markdown}{default}(x, fragments = c(), ...)

\method{rd2markdown}{title}(x, fragments = c(), ...)

\method{rd2markdown}{description}(x, fragments = c(), ..., title = NULL)

\method{rd2markdown}{author}(x, fragments = c(), ...)

\method{rd2markdown}{format}(x, fragments = c(), ...)

\method{rd2markdown}{describe}(x, fragments = c(), ...)

\method{rd2markdown}{details}(x, fragments = c(), ...)

\method{rd2markdown}{note}(x, fragments = c(), ...)

\method{rd2markdown}{source}(x, fragments = c(), ...)

\method{rd2markdown}{value}(x, fragments = c(), ...)

\method{rd2markdown}{section}(x, fragments = c(), ...)

\method{rd2markdown}{examples}(x, fragments = c(), ...)

\method{rd2markdown}{usage}(...)

\method{rd2markdown}{preformatted}(x, fragments = c(), ..., title = NULL, language = "")

\method{rd2markdown}{references}(x, fragments = c(), ...)

\method{rd2markdown}{seealso}(x, fragments = c(), ...)

\method{rd2markdown}{arguments}(x, fragments = c(), ...)

\method{rd2markdown}{dots}(x, fragments = c(), ...)

\method{rd2markdown}{TEXT}(x, fragments = c(), ...)

\method{rd2markdown}{COMMENT}(x, fragments = c(), ...)

\method{rd2markdown}{character}(
  x = NULL,
  fragments = c(),
  ...,
  topic = NULL,
  package = NULL,
  file = NULL,
  macros = NULL,
  envir = parent.frame()
)

\method{rd2markdown}{emph}(x, fragments = c(), ...)

\method{rd2markdown}{item}(x, fragments = c(), ...)

\method{rd2markdown}{enumerate}(x, fragments = c(), ...)

\method{rd2markdown}{itemize}(x, fragments = c(), ...)

\method{rd2markdown}{LIST}(x, fragments = c(), ...)

\method{rd2markdown}{tabular}(x, fragments = c(), ...)

\method{rd2markdown}{tab}(x, fragments = c(), ...)

\method{rd2markdown}{cr}(x, fragments = c(), ...)

\method{rd2markdown}{href}(x, fragments = c(), ...)

\method{rd2markdown}{url}(x, fragments = c(), ...)

\method{rd2markdown}{eqn}(x, fragments = c(), ...)

\method{rd2markdown}{deqn}(x, fragments = c(), ...)
}
\arguments{
\item{x}{An Rd object, list, help topic or Rd tag to convert into
markdown-formatted help.}

\item{fragments}{An optional vector of fragment tag names (such as
"description", "details" or "title") to filter the Rd object tags.}

\item{...}{Additional arguments used by specific methods.}

\item{title}{optional section title}

\item{language}{language to use as code fence syntax highlighter}

\item{topic}{usually, a \link{name} or character string specifying the
   topic for which help is sought.  A character string (enclosed in
   explicit single or double quotes) is always taken as naming a topic.

   If the value of \code{topic} is a length-one
   character vector the topic is taken to be the value of the only
   element.  Otherwise \code{topic} must be a name or a \link{reserved}
   word (if syntactically valid) or character string.

   See \sQuote{Details} for what happens if this is omitted.
 }

\item{package}{a name or character vector giving the packages to look
   into for documentation, or \code{NULL}.  By default, all packages
   whose namespaces are loaded are used.  To avoid a name being deparsed use e.g.
   \code{(pkg_ref)} (see the examples).}

\item{file}{Alternatively, provide a \code{.Rd} filepath. When \code{file} is
provided, other arguments are ignored.}

\item{macros}{Filename or environment from which to load additional
    macros, or a logical value.  See the Details below.}

\item{envir}{An optional environment in which to search for the help topic}
}
\description{
Render a Rd object out to a markdown file

\code{LIST} Rd tags are produced with an unnamed infotex function call. Whereas
normal infotex syntax follows a \code{\\name\{arg\}} convention, naked
\code{{arg}} will be captured as a \code{LIST}. This syntax has been adopted as a
convention for package names. The desired rendering of this element is often
ambiguous. To try to accommodate as many cases as possible, it is rendered as
plain text.
}
\details{
rd2markdown is the core function of the package. can work in various types.
It accepts .Rd objects extracted with \code{\link[rd2markdown]{get_rd}}
option but also can directly fetch documentation topics based on the file
path or the package. Due to the design, it follows, \code{rd2markdown}
function has high flexibility.  It is worth pointing out that the actual
output of \code{rd2markdown} function is a character vector of length one
that uses special signs to format the document. Use
\code{\link[base]{writeLines}} function to create an actual markdown file
using this output.  The \code{rd2markdown} function parses documentation
object based on an innovative idea of treating each .Rd tag as a separate
class and implementing methods for those classes. Thanks to that the package
is easily extensible and clear to understand. To see the list of currently
supported tags please see the Usage section.
}
\examples{

# Using get_rd
rd_file_example <- system.file("examples", "rd_file_sample.Rd", package = "rd2markdown")
rd <- rd2markdown::get_rd(file = rd_file_example)
cat(rd2markdown::rd2markdown(rd))

# Limit to particular sections
rd <- rd2markdown::get_rd(file = rd_file_example)
cat(rd2markdown::rd2markdown(rd, fragments = c("description", "usage")))

# Use file parameter
cat(rd2markdown::rd2markdown(file = rd_file_example))

# Use topic and package parameters
cat(
  rd2markdown::rd2markdown(
    topic = "rnorm",
    package = "stats",
    fragments = c("description", "usage")
  )
)

}
\seealso{
\code{\link[rd2markdown]{get_rd}} \code{\link[rd2markdown]{documentation_to_markdown}}
}
